#pragma once

namespace std
{
	template<typename _Arg, typename _Result>
	struct unary_function
	{
		typedef _Arg    argument_type;
		typedef _Result result_type;
	};

	template<typename _Tp>
	struct _Identity
		: public unary_function<_Tp,_Tp>
	{
		_Tp&
		operator()(_Tp& __x) const
		{ return __x; }

		const _Tp&
		operator()(const _Tp& __x) const
		{ return __x; }
	};
}
