#pragma once

#include "cstddef"

namespace std
{
	template <class _Tp, size_t _Size>
	struct array
	{
		typedef array                                 __self;
		typedef _Tp                                   value_type;
		typedef value_type&                           reference;
		typedef const value_type&                     const_reference;
		typedef value_type*                           iterator;
		typedef const value_type*                     const_iterator;
		typedef value_type*                           pointer;
		typedef const value_type*                     const_pointer;
		typedef size_t                                size_type;
		typedef ptrdiff_t                             difference_type;
		// typedef _VSTD::reverse_iterator<iterator>       reverse_iterator;
		// typedef _VSTD::reverse_iterator<const_iterator> const_reverse_iterator;

		_Tp __elems_[_Size];
	};
}
